name: RDP via Ngrok

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop and disable NLA
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force

          # Allow inbound RDP
          netsh advfirewall firewall add rule name="Allow-RDP" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Create RDP User with Secure Password
        run: |
          Add-Type -AssemblyName System.Web
          $password = [System.Web.Security.Membership]::GeneratePassword(14,3)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Download & Setup Ngrok
        run: |
          $ngrokPath = "$env:RUNNER_TEMP\ngrok"
          Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile "$env:RUNNER_TEMP\ngrok.zip"
          Expand-Archive "$env:RUNNER_TEMP\ngrok.zip" -DestinationPath $ngrokPath
          echo "NGROK_EXE=$ngrokPath\ngrok.exe" >> $env:GITHUB_ENV

      - name: Start Ngrok Tunnel
        run: |
          & "${{ env.NGROK_EXE }}" authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
          Start-Process -FilePath "${{ env.NGROK_EXE }}" -ArgumentList "tcp 3389" -WindowStyle Hidden
          Start-Sleep -Seconds 10
          $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
          $url = $tunnels.tunnels[0].public_url
          echo "NGROK_URL=$url" >> $env:GITHUB_ENV
          Write-Host "==============================="
          Write-Host "Ngrok TCP Address: $url"
          Write-Host "Username: RDP"
          Write-Host "Password: $env:RDP_PASSWORD"
          Write-Host "==============================="

      - name: Keep Alive
        run: |
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active via Ngrok: $env:NGROK_URL"
              Start-Sleep -Seconds 300
          }
