name: Free RDP

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Enable RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Restart-Service -Name TermService

    - name: Create User
      run: |
        Add-Type -AssemblyName System.Web
        $password = [System.Web.Security.Membership]::GeneratePassword(14,3)
        $securePass = ConvertTo-SecureString $password -AsPlainText -Force
        New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
        Add-LocalGroupMember -Group "Administrators" -Member "RDP"
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
        echo "USERNAME=RDP" >> $env:GITHUB_ENV
        echo "PASSWORD=$password" >> $env:GITHUB_ENV

    - name: Download & Setup Ngrok
      run: |
        $ngrokPath = "$env:RUNNER_TEMP\ngrok"
        Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile "$env:RUNNER_TEMP\ngrok.zip"
        Expand-Archive "$env:RUNNER_TEMP\ngrok.zip" -DestinationPath $ngrokPath
        echo "NGROK_EXE=$ngrokPath\ngrok.exe" >> $env:GITHUB_ENV

    - name: Start Tunnel
      run: |
        & "${{ env.NGROK_EXE }}" authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
        Start-Process -FilePath "${{ env.NGROK_EXE }}" -ArgumentList "tcp 3389" -WindowStyle Hidden
        Start-Sleep -Seconds 10
        $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
        $url = $tunnels.tunnels[0].public_url
        echo "RDP_URL=$url" >> $env:GITHUB_ENV
        Write-Host "================================"
        Write-Host "RDP Connect: $url"
        Write-Host "User: RDP"
        Write-Host "Pass: $env:PASSWORD"
        Write-Host "================================"
        while ($true) { Start-Sleep -Seconds 300 }
